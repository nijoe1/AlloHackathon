"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/OrganizationProfile",{

/***/ "./utils/utils.js":
/*!************************!*\
  !*** ./utils/utils.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateRemainingTime: function() { return /* binding */ calculateRemainingTime; },\n/* harmony export */   formatCurrency: function() { return /* binding */ formatCurrency; },\n/* harmony export */   getOrgMembers: function() { return /* binding */ getOrgMembers; },\n/* harmony export */   getUserAdminOrgs: function() { return /* binding */ getUserAdminOrgs; },\n/* harmony export */   getUserOrganizations: function() { return /* binding */ getUserOrganizations; }\n/* harmony export */ });\n/* harmony import */ var _utils_graphFunctions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils/graphFunctions */ \"./utils/graphFunctions.ts\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"./node_modules/viem/_esm/index.js\");\n/* harmony import */ var _utils_tableland__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/tableland */ \"./utils/tableland.js\");\n/* harmony import */ var _constants_HackRegistry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/constants/HackRegistry */ \"./constants/HackRegistry.ts\");\n\n\n\n\n\nconst formatCurrency = (value)=>{\n    value = BigInt(value) / BigInt(10 ** 18);\n    let formattedValue;\n    if (value < BigInt(1000)) {\n        // If value is less than a thousand\n        formattedValue = \"$\".concat(value.toString());\n    } else if (value < BigInt(1000000)) {\n        // If value is less than a million\n        formattedValue = \"$\".concat(value / BigInt(1000), \"K\");\n    } else if (value < BigInt(1000000000)) {\n        // If value is less than a billion\n        formattedValue = \"$\".concat(value / BigInt(1000000), \"M\");\n    } else if (value < BigInt(1000000000000)) {\n        // If value is less than a trillion\n        formattedValue = \"$\".concat(value / BigInt(1000000000), \"B\");\n    } else {\n        // If value is a trillion or more\n        formattedValue = \"$\".concat(value / BigInt(1000000000000), \"T\");\n    }\n    return formattedValue;\n};\nconst calculateRemainingTime = (currentTime, endTime)=>{\n    let remainingTimeInSeconds = endTime - currentTime;\n    remainingTimeInSeconds = parseInt(remainingTimeInSeconds);\n    const days = Math.floor(remainingTimeInSeconds / (3600 * 24));\n    const hours = Math.floor(remainingTimeInSeconds % (3600 * 24) / 3600);\n    const minutes = Math.floor(remainingTimeInSeconds % 3600 / 60);\n    let formattedTime = \"\";\n    if (days > 0) formattedTime += \"\".concat(days, \"d \");\n    if (hours > 0) formattedTime += \"\".concat(hours, \"h \");\n    if (minutes > 0) formattedTime += \"\".concat(minutes, \"m\");\n    return formattedTime || \"ENDED\";\n};\nconst getUserOrganizations = async (address)=>{\n    const profiles = await (0,_utils_tableland__WEBPACK_IMPORTED_MODULE_1__.getAllProfilesAdminHat)();\n    let partOfProfiles = [];\n    for (const profile of profiles){\n        const adminHat = profile.adminHat;\n        let data = (0,viem__WEBPACK_IMPORTED_MODULE_3__.encodePacked)([\n            \"uint256\"\n        ], [\n            adminHat\n        ]);\n        let resp = await (0,_utils_graphFunctions__WEBPACK_IMPORTED_MODULE_0__.getProfileHats)(data);\n        const searchAdmin = resp.hat.wearers[0].id == (address === null || address === void 0 ? void 0 : address.toLowerCase());\n        if (searchAdmin) {\n            let data = await (0,_utils_tableland__WEBPACK_IMPORTED_MODULE_1__.getProfilesData)([\n                profile.profileID\n            ]);\n            let obj = {\n                profileData: data,\n                type: \"ADMIN\"\n            };\n            partOfProfiles.push(obj);\n            continue;\n        }\n        for (const wearer of resp.hat.subhats.wearers){\n            if (wearer.id == (address === null || address === void 0 ? void 0 : address.toLowerCase())) {\n                let data = await (0,_utils_tableland__WEBPACK_IMPORTED_MODULE_1__.getProfilesData)([\n                    profile.profileID\n                ]);\n                let obj = {\n                    profileData: data,\n                    type: \"MANAGER\"\n                };\n                partOfProfiles.push(obj);\n                continue;\n            }\n        }\n        for (const wearer of resp.hat.subhats.subhats.wearers){\n            if (wearer.id == (address === null || address === void 0 ? void 0 : address.toLowerCase())) {\n                let data = await (0,_utils_tableland__WEBPACK_IMPORTED_MODULE_1__.getProfilesData)([\n                    profile.profileID\n                ]);\n                let obj = {\n                    profileData: data,\n                    type: \"REVIEWER\"\n                };\n                partOfProfiles.push(obj);\n                continue;\n            }\n        }\n    }\n    return partOfProfiles;\n};\nconst getOrgMembers = async (profileID)=>{\n    const adminHat = await (0,_utils_tableland__WEBPACK_IMPORTED_MODULE_1__.getProfileAdminHat)(profileID);\n    console.log(adminHat);\n    let data = (0,viem__WEBPACK_IMPORTED_MODULE_3__.encodePacked)([\n        \"uint256\"\n    ], [\n        adminHat\n    ]);\n    let resp = await (0,_utils_graphFunctions__WEBPACK_IMPORTED_MODULE_0__.getProfileHats)(data);\n    let RolesArray = parseHatObjectOneDimensional;\n    console.log(resp);\n};\nfunction parseHatObjectOneDimensional(hatData) {\n    const result = [];\n    const addressAccessMap = new Map(); // To track access role for each address\n    function parseHat(hat, access) {\n        const wearerAddress = hat.wearers[0].id;\n        if (!addressAccessMap.has(wearerAddress)) {\n            addressAccessMap.set(wearerAddress, access);\n            result.push({\n                accessRole: access,\n                address: wearerAddress\n            });\n        }\n        if (hat.subHats && hat.subHats.length > 0) {\n            hat.subHats.forEach((subHat)=>{\n                parseHat(subHat, access);\n            });\n        }\n    }\n    parseHat(hatData.hat, \"Admin\");\n    return result;\n}\nconst getUserAdminOrgs = async (address)=>{\n    const profiles = await (0,_utils_tableland__WEBPACK_IMPORTED_MODULE_1__.getAllProfilesAdminHat)();\n    let partOfProfiles = [];\n    for (const profile of profiles){\n        const adminHat = profile.adminHat;\n        let data = (0,viem__WEBPACK_IMPORTED_MODULE_3__.encodePacked)([\n            \"uint256\"\n        ], [\n            adminHat\n        ]);\n        let resp = await (0,_utils_graphFunctions__WEBPACK_IMPORTED_MODULE_0__.getProfileHats)(data);\n        const searchAdmin = resp.hat.wearers[0].id == (address === null || address === void 0 ? void 0 : address.toLowerCase());\n        if (searchAdmin) {\n            let data = await (0,_utils_tableland__WEBPACK_IMPORTED_MODULE_1__.getProfilesData)([\n                profile.profileID\n            ]);\n            let obj = {\n                profileData: data,\n                type: \"ADMIN\"\n            };\n            partOfProfiles.push(obj);\n            continue;\n        }\n    }\n    return partOfProfiles;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/utils.js\n"));

/***/ })

});